Docker learning purpose 
Website link https://www.docker.com/
scroll down select the developers in that select the Docs and select the Get started

Why we are using the docker ?
before we are implementing the docker in that scenerio if create a project he will be working in the windows function and he send the project to the tester for testing puropse he will be working in the  Mac 
so that time it will be heachache for the both the person this is known as cross platform 

Docker era 
Now same example we are using  when the developer working in the windows it has same folder like the configureation file , installing file, similarily docker file also avaible when the develop send the code to tester he will sending only the docker file so now tester run the docker comment it will deployed accordingly 

What is the docker?
Docker is a software platform that allows us to build, test ,deploy applications quickly. 
Docker package software into standarized units is called containers
Docker can help us in scaling and deployment

Mono lithic architeure 
It means all the operation is done in the single machine 
Micro lithic architeure
It means each operation peformed on the separate machine so the process will talk place 

Difference between mono lithic architeure
Mono lithic architeure
Tightly coupled it means everything in the single machine 
Not so good at fault tolerance
Difficult to scale 
work well with lesser traffice
Less moduraity 


Disadvantage
less cpmplexcity
low cost
low maintainablity
Average programmers

Micro lithic architeure
loosly coupled
good at fault tolerance
esay to scale 
work well in all condition.
High modurity


Disadvantage
high complexcity
High cost 
hight maintainablity
Very skilled programmers

Basic different between githuub and docker compose

In github we can use all the indiuivuals code can accessable easily like sql , python 
In docker compose  we are createing indiviuals file and combaininig into single file so it can be accessable easily by using single code 

Docker: Docker is an open-source platform that enables the creation, distribution, and execution of containerized applications. 
It provides a lightweight virtualization environment, called a container,
where applications can run in an isolated manner without interfering with the underlying system. 
Docker allows developers to package an application and its dependencies into a single unit called a Docker image. 
These images can be easily deployed and run on any system that has Docker installed, making application deployment more portable and consistent across different environments.


Docker Compose: Docker Compose, on the other hand, is a tool specifically designed for managing multi-container applications. 
It is used to define and run applications composed of multiple containers. 
With Docker Compose, you can define a multi-container environment using a YAML file called a Compose file. This file describes the services, networks, and volumes required for your application and their relationships. 
Docker Compose then uses this file to create and manage the containers as a cohesive unit, allowing you to start, stop, and scale your application with a single command.

In summary, Docker is the core technology that enables containerization and allows you to build and run individual containers, while Docker Compose is a higher-level tool that simplifies the management of multi-container applications by providing an easy way to define and orchestrate them.

Docker image 
It is create using the by using the set of instrution is called docker file and this file are immutabel cannot be modified 

Images: Docker images are the building blocks used to create and run containers.
An image is a read-only template that contains all the necessary files, libraries, and dependencies required to run a specific application or service. 
It includes the application's code, runtime environment, system tools, and any additional dependencies defined during the image creation process. 
Docker images are built using a set of instructions defined in a file called a Dockerfile. Images are stored in a registry (such as Docker Hub or a private registry) and can be pulled down to create containers.
Images are immutable, meaning they cannot be modified once created, and any changes made to a container are stored as a separate layer called a container layer.

Docker container 
Containers: Containers are lightweight, isolated, and executable environments that encapsulate an application along with its dependencies and configurations. 
They provide a consistent runtime environment, ensuring that the application behaves the same way regardless of the underlying system. 
Containers are based on Docker images and can be run on any system that has Docker installed. 
Each container runs as an isolated process, with its own filesystem, networking, and resource constraints. Containers are portable, scalable, and can be easily moved or replicated across different environments.

We were using this concept for docker compose 

Docker containers
Automatically comes up with docker name containers if we want we can change the name of our purpose


Docker Vs Virutial machine 
Timing 1:54 
INFRA means RAM , ROM 
HOST OS means which system is operating 
DOCKER ENGINE is utilize everything that HOST OS ,INFRA 

Virtual machine
HYPERVISOK it creates muptiple enviroment for different operatating systems over that software will run  
Timing 2:02
The main differents between docker and virtual miachine
docker is working only in single OS but virtual miachine can operate in different and mutiple OS 
2:20
If any case Docker is not installed in the system you can use the docker playground 
give start and click the new instances
run the commabd dockker image ls it means whatever images in the docker hub
if you want any image like sql goto docker hub search sql you will find the text docker sql pull 
copy that paste in the dockker playground you will be pull sql into system
if you want use any version 
write docker run version number it wil be starting
if any you want to see the container type the docker ps --a 
it will list all the containers
if you want to delete the containers 
write docker rm  
if you want to delete the entire container use the command the docker rm $(dockerps -a -q)

you can delete the image by using docker rmi image id it will delete the particular image 


